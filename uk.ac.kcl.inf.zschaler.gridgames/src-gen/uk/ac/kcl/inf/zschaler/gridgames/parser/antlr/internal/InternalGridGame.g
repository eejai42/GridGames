/*
 * generated by Xtext
 */
grammar InternalGridGame;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package uk.ac.kcl.inf.zschaler.gridgames.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.zschaler.gridgames.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import uk.ac.kcl.inf.zschaler.gridgames.services.GridGameGrammarAccess;

}

@parser::members {

 	private GridGameGrammarAccess grammarAccess;
 	
    public InternalGridGameParser(TokenStream input, GridGameGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "GridGame";	
   	}
   	
   	@Override
   	protected GridGameGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleGridGame
entryRuleGridGame returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getGridGameRule()); }
	 iv_ruleGridGame=ruleGridGame 
	 { $current=$iv_ruleGridGame.current; } 
	 EOF 
;

// Rule GridGame
ruleGridGame returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='game' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getGridGameAccess().getGameKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getGridGameAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getGridGameRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getGridGameAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getGridGameAccess().getCellsCellSpecificationParserRuleCall_3_0()); 
	    }
		lv_cells_3_0=ruleCellSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGridGameRule());
	        }
       		add(
       			$current, 
       			"cells",
        		lv_cells_3_0, 
        		"CellSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getGridGameAccess().getFieldsFieldSpecificationParserRuleCall_4_0()); 
	    }
		lv_fields_4_0=ruleFieldSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGridGameRule());
	        }
       		add(
       			$current, 
       			"fields",
        		lv_fields_4_0, 
        		"FieldSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)+(
(
		{ 
	        newCompositeNode(grammarAccess.getGridGameAccess().getOptionsOptionSpecificationParserRuleCall_5_0()); 
	    }
		lv_options_5_0=ruleOptionSpecification		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getGridGameRule());
	        }
       		add(
       			$current, 
       			"options",
        		lv_options_5_0, 
        		"OptionSpecification");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getGridGameAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleCellSpecification
entryRuleCellSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellSpecificationRule()); }
	 iv_ruleCellSpecification=ruleCellSpecification 
	 { $current=$iv_ruleCellSpecification.current; } 
	 EOF 
;

// Rule CellSpecification
ruleCellSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='cell' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCellSpecificationAccess().getCellKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCellSpecificationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellSpecificationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCellSpecificationAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellSpecificationAccess().getMembersCellMemberParserRuleCall_3_0()); 
	    }
		lv_members_3_0=ruleCellMember		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellSpecificationRule());
	        }
       		add(
       			$current, 
       			"members",
        		lv_members_3_0, 
        		"CellMember");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCellSpecificationAccess().getRightCurlyBracketKeyword_4());
    }
)
;





// Entry rule entryRuleCellMember
entryRuleCellMember returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellMemberRule()); }
	 iv_ruleCellMember=ruleCellMember 
	 { $current=$iv_ruleCellMember.current; } 
	 EOF 
;

// Rule CellMember
ruleCellMember returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getCellMemberAccess().getCellDisplaySpecParserRuleCall_0()); 
    }
    this_CellDisplaySpec_0=ruleCellDisplaySpec
    { 
        $current = $this_CellDisplaySpec_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCellMemberAccess().getCellVarSpecParserRuleCall_1()); 
    }
    this_CellVarSpec_1=ruleCellVarSpec
    { 
        $current = $this_CellVarSpec_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getCellMemberAccess().getCellStateSpecParserRuleCall_2()); 
    }
    this_CellStateSpec_2=ruleCellStateSpec
    { 
        $current = $this_CellStateSpec_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCellDisplaySpec
entryRuleCellDisplaySpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellDisplaySpecRule()); }
	 iv_ruleCellDisplaySpec=ruleCellDisplaySpec 
	 { $current=$iv_ruleCellDisplaySpec.current; } 
	 EOF 
;

// Rule CellDisplaySpec
ruleCellDisplaySpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='display' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCellDisplaySpecAccess().getDisplayKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCellDisplaySpecAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='as' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCellDisplaySpecAccess().getAsKeyword_2());
    }
(
(
(
		lv_display_type_3_1=	'label' 
    {
        newLeafNode(lv_display_type_3_1, grammarAccess.getCellDisplaySpecAccess().getDisplay_typeLabelKeyword_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellDisplaySpecRule());
	        }
       		setWithLastConsumed($current, "display_type", lv_display_type_3_1, null);
	    }

    |		lv_display_type_3_2=	'button' 
    {
        newLeafNode(lv_display_type_3_2, grammarAccess.getCellDisplaySpecAccess().getDisplay_typeButtonKeyword_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellDisplaySpecRule());
	        }
       		setWithLastConsumed($current, "display_type", lv_display_type_3_2, null);
	    }

)

)
)((	otherlv_4='text' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCellDisplaySpecAccess().getTextKeyword_4_0_0());
    }
(
(
		lv_text_5_0=RULE_STRING
		{
			newLeafNode(lv_text_5_0, grammarAccess.getCellDisplaySpecAccess().getTextSTRINGTerminalRuleCall_4_0_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellDisplaySpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"text",
        		lv_text_5_0, 
        		"STRING");
	    }

)
))
    |(	otherlv_6='var' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCellDisplaySpecAccess().getVarKeyword_4_1_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellDisplaySpecRule());
	        }
        }
	otherlv_7=RULE_ID
	{
		newLeafNode(otherlv_7, grammarAccess.getCellDisplaySpecAccess().getVarCellVarSpecCrossReference_4_1_1_0()); 
	}

)
)))	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCellDisplaySpecAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleCellVarSpec
entryRuleCellVarSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellVarSpecRule()); }
	 iv_ruleCellVarSpec=ruleCellVarSpec 
	 { $current=$iv_ruleCellVarSpec.current; } 
	 EOF 
;

// Rule CellVarSpec
ruleCellVarSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='var' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCellVarSpecAccess().getVarKeyword_0());
    }
(
(
(
		lv_type_1_1=	'int' 
    {
        newLeafNode(lv_type_1_1, grammarAccess.getCellVarSpecAccess().getTypeIntKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellVarSpecRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_1, null);
	    }

    |		lv_type_1_2=	'String' 
    {
        newLeafNode(lv_type_1_2, grammarAccess.getCellVarSpecAccess().getTypeStringKeyword_1_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellVarSpecRule());
	        }
       		setWithLastConsumed($current, "type", lv_type_1_2, null);
	    }

)

)
)(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getCellVarSpecAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellVarSpecRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"ID");
	    }

)
))
;





// Entry rule entryRuleCellStateSpec
entryRuleCellStateSpec returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellStateSpecRule()); }
	 iv_ruleCellStateSpec=ruleCellStateSpec 
	 { $current=$iv_ruleCellStateSpec.current; } 
	 EOF 
;

// Rule CellStateSpec
ruleCellStateSpec returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='states' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCellStateSpecAccess().getStatesKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCellStateSpecAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellStateSpecAccess().getStatesCellStateParserRuleCall_2_0()); 
	    }
		lv_states_2_0=ruleCellState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellStateSpecRule());
	        }
       		add(
       			$current, 
       			"states",
        		lv_states_2_0, 
        		"CellState");
	        afterParserOrEnumRuleCall();
	    }

)
)+	otherlv_3='start' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCellStateSpecAccess().getStartKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCellStateSpecAccess().getEqualsSignKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellStateSpecRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getCellStateSpecAccess().getStartCellStateCrossReference_5_0()); 
	}

)
)	otherlv_6='}' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCellStateSpecAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleCellState
entryRuleCellState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCellStateRule()); }
	 iv_ruleCellState=ruleCellState 
	 { $current=$iv_ruleCellState.current; } 
	 EOF 
;

// Rule CellState
ruleCellState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=RULE_ID
		{
			newLeafNode(lv_name_0_0, grammarAccess.getCellStateAccess().getNameIDTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCellStateRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_0_0, 
        		"ID");
	    }

)
)	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCellStateAccess().getDisplayCellDisplaySpecParserRuleCall_2_0()); 
	    }
		lv_display_2_0=ruleCellDisplaySpec		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCellStateRule());
	        }
       		set(
       			$current, 
       			"display",
        		lv_display_2_0, 
        		"CellDisplaySpec");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='}' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleFieldSpecification
entryRuleFieldSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldSpecificationRule()); }
	 iv_ruleFieldSpecification=ruleFieldSpecification 
	 { $current=$iv_ruleFieldSpecification.current; } 
	 EOF 
;

// Rule FieldSpecification
ruleFieldSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='field' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0());
    }
(
(
		lv_name_1_0=RULE_ID
		{
			newLeafNode(lv_name_1_0, grammarAccess.getFieldSpecificationAccess().getNameIDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldSpecificationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ID");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='width' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldSpecificationAccess().getWidthKeyword_3());
    }
	otherlv_4='=' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_4());
    }
(
(
		lv_width_5_0=RULE_INT
		{
			newLeafNode(lv_width_5_0, grammarAccess.getFieldSpecificationAccess().getWidthINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldSpecificationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"width",
        		lv_width_5_0, 
        		"INT");
	    }

)
)	otherlv_6='height' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getFieldSpecificationAccess().getHeightKeyword_6());
    }
	otherlv_7='=' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_7());
    }
(
(
		lv_height_8_0=RULE_INT
		{
			newLeafNode(lv_height_8_0, grammarAccess.getFieldSpecificationAccess().getHeightINTTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldSpecificationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"height",
        		lv_height_8_0, 
        		"INT");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldSpecificationAccess().getField_initialisationFieldInitialisationsParserRuleCall_9_0()); 
	    }
		lv_field_initialisation_9_0=ruleFieldInitialisations		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldSpecificationRule());
	        }
       		set(
       			$current, 
       			"field_initialisation",
        		lv_field_initialisation_9_0, 
        		"FieldInitialisations");
	        afterParserOrEnumRuleCall();
	    }

)
)?	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleOptionSpecification
entryRuleOptionSpecification returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getOptionSpecificationRule()); }
	 iv_ruleOptionSpecification=ruleOptionSpecification 
	 { $current=$iv_ruleOptionSpecification.current; } 
	 EOF 
;

// Rule OptionSpecification
ruleOptionSpecification returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getOptionSpecificationAccess().getStartFieldDeclarationParserRuleCall_0()); 
    }
    this_StartFieldDeclaration_0=ruleStartFieldDeclaration
    { 
        $current = $this_StartFieldDeclaration_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getOptionSpecificationAccess().getAllowRestartMenuParserRuleCall_1()); 
    }
    this_AllowRestartMenu_1=ruleAllowRestartMenu
    { 
        $current = $this_AllowRestartMenu_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAllowRestartMenu
entryRuleAllowRestartMenu returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAllowRestartMenuRule()); }
	 iv_ruleAllowRestartMenu=ruleAllowRestartMenu 
	 { $current=$iv_ruleAllowRestartMenu.current; } 
	 EOF 
;

// Rule AllowRestartMenu
ruleAllowRestartMenu returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='allow_restart' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getAllowRestartMenuAccess().getAllow_restartKeyword_0());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getAllowRestartMenuAccess().getAllowRestartMenuAction_1(),
            $current);
    }
))
;





// Entry rule entryRuleStartFieldDeclaration
entryRuleStartFieldDeclaration returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStartFieldDeclarationRule()); }
	 iv_ruleStartFieldDeclaration=ruleStartFieldDeclaration 
	 { $current=$iv_ruleStartFieldDeclaration.current; } 
	 EOF 
;

// Rule StartFieldDeclaration
ruleStartFieldDeclaration returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='start' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStartFieldDeclarationAccess().getStartKeyword_0());
    }
	otherlv_1='=' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStartFieldDeclarationAccess().getEqualsSignKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStartFieldDeclarationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleFieldInitialisations
entryRuleFieldInitialisations returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldInitialisationsRule()); }
	 iv_ruleFieldInitialisations=ruleFieldInitialisations 
	 { $current=$iv_ruleFieldInitialisations.current; } 
	 EOF 
;

// Rule FieldInitialisations
ruleFieldInitialisations returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='init' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFieldInitialisationsAccess().getInitKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldInitialisationsAccess().getLeftCurlyBracketKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getFieldInitialisationsAccess().getInitialisationsFieldInitialisationParserRuleCall_2_0_0()); 
	    }
		lv_initialisations_2_0=ruleFieldInitialisation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldInitialisationsRule());
	        }
       		add(
       			$current, 
       			"initialisations",
        		lv_initialisations_2_0, 
        		"FieldInitialisation");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=';' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldInitialisationsAccess().getSemicolonKeyword_2_1());
    }
)+	otherlv_4='}' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getFieldInitialisationsAccess().getRightCurlyBracketKeyword_3());
    }
)
;





// Entry rule entryRuleFieldInitialisation
entryRuleFieldInitialisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFieldInitialisationRule()); }
	 iv_ruleFieldInitialisation=ruleFieldInitialisation 
	 { $current=$iv_ruleFieldInitialisation.current; } 
	 EOF 
;

// Rule FieldInitialisation
ruleFieldInitialisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getFieldInitialisationAccess().getDefaultInitialisationParserRuleCall_0()); 
    }
    this_DefaultInitialisation_0=ruleDefaultInitialisation
    { 
        $current = $this_DefaultInitialisation_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFieldInitialisationAccess().getRandomInitialisationParserRuleCall_1()); 
    }
    this_RandomInitialisation_1=ruleRandomInitialisation
    { 
        $current = $this_RandomInitialisation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getFieldInitialisationAccess().getContextInitialisationParserRuleCall_2()); 
    }
    this_ContextInitialisation_2=ruleContextInitialisation
    { 
        $current = $this_ContextInitialisation_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefaultInitialisation
entryRuleDefaultInitialisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultInitialisationRule()); }
	 iv_ruleDefaultInitialisation=ruleDefaultInitialisation 
	 { $current=$iv_ruleDefaultInitialisation.current; } 
	 EOF 
;

// Rule DefaultInitialisation
ruleDefaultInitialisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='default' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefaultInitialisationAccess().getDefaultKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDefaultInitialisationAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultInitialisationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getDefaultInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); 
	}

)
))
;





// Entry rule entryRuleRandomInitialisation
entryRuleRandomInitialisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getRandomInitialisationRule()); }
	 iv_ruleRandomInitialisation=ruleRandomInitialisation 
	 { $current=$iv_ruleRandomInitialisation.current; } 
	 EOF 
;

// Rule RandomInitialisation
ruleRandomInitialisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='random' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getRandomInitialisationAccess().getRandomKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getRandomInitialisationAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomInitialisationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getRandomInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); 
	}

)
)	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getRandomInitialisationAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_count_4_0=RULE_INT
		{
			newLeafNode(lv_count_4_0, grammarAccess.getRandomInitialisationAccess().getCountINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRandomInitialisationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"count",
        		lv_count_4_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleContextInitialisation
entryRuleContextInitialisation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextInitialisationRule()); }
	 iv_ruleContextInitialisation=ruleContextInitialisation 
	 { $current=$iv_ruleContextInitialisation.current; } 
	 EOF 
;

// Rule ContextInitialisation
ruleContextInitialisation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='context' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getContextInitialisationAccess().getContextKeyword_0());
    }
	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContextInitialisationAccess().getColonKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContextInitialisationRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getContextInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); 
	}

)
)	otherlv_3='check' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getContextInitialisationAccess().getCheckKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContextInitialisationAccess().getCheckContextExpressionParserRuleCall_4_0()); 
	    }
		lv_check_4_0=ruleContextExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextInitialisationRule());
	        }
       		set(
       			$current, 
       			"check",
        		lv_check_4_0, 
        		"ContextExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='value' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getContextInitialisationAccess().getValueKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getContextInitialisationAccess().getEqualsSignKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContextInitialisationAccess().getExpContextExpressionParserRuleCall_7_0()); 
	    }
		lv_exp_7_0=ruleContextExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextInitialisationRule());
	        }
       		set(
       			$current, 
       			"exp",
        		lv_exp_7_0, 
        		"ContextExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleContextExpression
entryRuleContextExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getContextExpressionRule()); }
	 iv_ruleContextExpression=ruleContextExpression 
	 { $current=$iv_ruleContextExpression.current; } 
	 EOF 
;

// Rule ContextExpression
ruleContextExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getContextExpressionAccess().getSub_expAtomicExpressionParserRuleCall_0_0()); 
	    }
		lv_sub_exp_0_0=ruleAtomicExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextExpressionRule());
	        }
       		add(
       			$current, 
       			"sub_exp",
        		lv_sub_exp_0_0, 
        		"AtomicExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getContextExpressionAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContextExpressionAccess().getSub_expAtomicExpressionParserRuleCall_1_1_0()); 
	    }
		lv_sub_exp_2_0=ruleAtomicExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContextExpressionRule());
	        }
       		add(
       			$current, 
       			"sub_exp",
        		lv_sub_exp_2_0, 
        		"AtomicExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAtomicExpressionRule()); }
	 iv_ruleAtomicExpression=ruleAtomicExpression 
	 { $current=$iv_ruleAtomicExpression.current; } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAtomicExpressionAccess().getFilterExpressionParserRuleCall_0()); 
    }
    this_FilterExpression_0=ruleFilterExpression
    { 
        $current = $this_FilterExpression_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicExpressionAccess().getCountExpressionParserRuleCall_1()); 
    }
    this_CountExpression_1=ruleCountExpression
    { 
        $current = $this_CountExpression_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAtomicExpressionAccess().getNotEmptyExpressionParserRuleCall_2()); 
    }
    this_NotEmptyExpression_2=ruleNotEmptyExpression
    { 
        $current = $this_NotEmptyExpression_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleFilterExpression
entryRuleFilterExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilterExpressionRule()); }
	 iv_ruleFilterExpression=ruleFilterExpression 
	 { $current=$iv_ruleFilterExpression.current; } 
	 EOF 
;

// Rule FilterExpression
ruleFilterExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='filter' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFilterExpressionAccess().getFilterKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getFilterExpressionAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFilterExpressionRule());
	        }
        }
	otherlv_2=RULE_ID
	{
		newLeafNode(otherlv_2, grammarAccess.getFilterExpressionAccess().getCell_typeCellSpecificationCrossReference_2_0()); 
	}

)
)	otherlv_3=')' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFilterExpressionAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleCountExpression
entryRuleCountExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCountExpressionRule()); }
	 iv_ruleCountExpression=ruleCountExpression 
	 { $current=$iv_ruleCountExpression.current; } 
	 EOF 
;

// Rule CountExpression
ruleCountExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='count' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCountExpressionAccess().getCountKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getCountExpressionAccess().getLeftParenthesisKeyword_1());
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCountExpressionAccess().getRightParenthesisKeyword_2());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getCountExpressionAccess().getCountExpressionAction_3(),
            $current);
    }
))
;





// Entry rule entryRuleNotEmptyExpression
entryRuleNotEmptyExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNotEmptyExpressionRule()); }
	 iv_ruleNotEmptyExpression=ruleNotEmptyExpression 
	 { $current=$iv_ruleNotEmptyExpression.current; } 
	 EOF 
;

// Rule NotEmptyExpression
ruleNotEmptyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='notEmpty' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNotEmptyExpressionAccess().getNotEmptyKeyword_0());
    }
	otherlv_1='(' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getNotEmptyExpressionAccess().getLeftParenthesisKeyword_1());
    }
	otherlv_2=')' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNotEmptyExpressionAccess().getRightParenthesisKeyword_2());
    }
(
    {
        $current = forceCreateModelElement(
            grammarAccess.getNotEmptyExpressionAccess().getNotEmptyExpressionAction_3(),
            $current);
    }
))
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


