/**
 * generated by Xtext
 */
package uk.ac.kcl.inf.zschaler.gridgames.generator;

import com.google.common.collect.Iterators;
import java.util.Iterator;
import org.eclipse.emf.common.util.TreeIterator;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.generator.IGenerator;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import uk.ac.kcl.inf.zschaler.gridgames.generator.CellGenerator;
import uk.ac.kcl.inf.zschaler.gridgames.generator.FieldGenerator;
import uk.ac.kcl.inf.zschaler.gridgames.gridGame.GridGame;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class GridGameGenerator implements IGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess fsa) {
    TreeIterator<EObject> _allContents = resource.getAllContents();
    Iterator<GridGame> _filter = Iterators.<GridGame>filter(_allContents, GridGame.class);
    final GridGame gg = IteratorExtensions.<GridGame>head(_filter);
    FieldGenerator _fieldGenerator = new FieldGenerator(gg);
    _fieldGenerator.generate(fsa);
    CellGenerator _cellGenerator = new CellGenerator(gg);
    _cellGenerator.generate(fsa);
  }
}
