/*
 * generated by Xtext
 */
grammar InternalGridGame;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package uk.ac.kcl.inf.zschaler.gridgames.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package uk.ac.kcl.inf.zschaler.gridgames.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import uk.ac.kcl.inf.zschaler.gridgames.services.GridGameGrammarAccess;

}

@parser::members {
 
 	private GridGameGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(GridGameGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleGridGame
entryRuleGridGame 
:
{ before(grammarAccess.getGridGameRule()); }
	 ruleGridGame
{ after(grammarAccess.getGridGameRule()); } 
	 EOF 
;

// Rule GridGame
ruleGridGame
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGridGameAccess().getGroup()); }
(rule__GridGame__Group__0)
{ after(grammarAccess.getGridGameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellSpecification
entryRuleCellSpecification 
:
{ before(grammarAccess.getCellSpecificationRule()); }
	 ruleCellSpecification
{ after(grammarAccess.getCellSpecificationRule()); } 
	 EOF 
;

// Rule CellSpecification
ruleCellSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellSpecificationAccess().getGroup()); }
(rule__CellSpecification__Group__0)
{ after(grammarAccess.getCellSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellMember
entryRuleCellMember 
:
{ before(grammarAccess.getCellMemberRule()); }
	 ruleCellMember
{ after(grammarAccess.getCellMemberRule()); } 
	 EOF 
;

// Rule CellMember
ruleCellMember
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellMemberAccess().getAlternatives()); }
(rule__CellMember__Alternatives)
{ after(grammarAccess.getCellMemberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellDisplaySpec
entryRuleCellDisplaySpec 
:
{ before(grammarAccess.getCellDisplaySpecRule()); }
	 ruleCellDisplaySpec
{ after(grammarAccess.getCellDisplaySpecRule()); } 
	 EOF 
;

// Rule CellDisplaySpec
ruleCellDisplaySpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getGroup()); }
(rule__CellDisplaySpec__Group__0)
{ after(grammarAccess.getCellDisplaySpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCellVarSpec
entryRuleCellVarSpec 
:
{ before(grammarAccess.getCellVarSpecRule()); }
	 ruleCellVarSpec
{ after(grammarAccess.getCellVarSpecRule()); } 
	 EOF 
;

// Rule CellVarSpec
ruleCellVarSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellVarSpecAccess().getGroup()); }
(rule__CellVarSpec__Group__0)
{ after(grammarAccess.getCellVarSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGlobalCellStateSpec
entryRuleGlobalCellStateSpec 
:
{ before(grammarAccess.getGlobalCellStateSpecRule()); }
	 ruleGlobalCellStateSpec
{ after(grammarAccess.getGlobalCellStateSpecRule()); } 
	 EOF 
;

// Rule GlobalCellStateSpec
ruleGlobalCellStateSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getGroup()); }
(rule__GlobalCellStateSpec__Group__0)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateParamSpec
entryRuleStateParamSpec 
:
{ before(grammarAccess.getStateParamSpecRule()); }
	 ruleStateParamSpec
{ after(grammarAccess.getStateParamSpecRule()); } 
	 EOF 
;

// Rule StateParamSpec
ruleStateParamSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateParamSpecAccess().getGroup()); }
(rule__StateParamSpec__Group__0)
{ after(grammarAccess.getStateParamSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellStateSpec
entryRuleCellStateSpec 
:
{ before(grammarAccess.getCellStateSpecRule()); }
	 ruleCellStateSpec
{ after(grammarAccess.getCellStateSpecRule()); } 
	 EOF 
;

// Rule CellStateSpec
ruleCellStateSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellStateSpecAccess().getAlternatives()); }
(rule__CellStateSpec__Alternatives)
{ after(grammarAccess.getCellStateSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalCellStateSpec
entryRuleLocalCellStateSpec 
:
{ before(grammarAccess.getLocalCellStateSpecRule()); }
	 ruleLocalCellStateSpec
{ after(grammarAccess.getLocalCellStateSpecRule()); } 
	 EOF 
;

// Rule LocalCellStateSpec
ruleLocalCellStateSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getGroup()); }
(rule__LocalCellStateSpec__Group__0)
{ after(grammarAccess.getLocalCellStateSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellStateSpecReference
entryRuleCellStateSpecReference 
:
{ before(grammarAccess.getCellStateSpecReferenceRule()); }
	 ruleCellStateSpecReference
{ after(grammarAccess.getCellStateSpecReferenceRule()); } 
	 EOF 
;

// Rule CellStateSpecReference
ruleCellStateSpecReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getGroup()); }
(rule__CellStateSpecReference__Group__0)
{ after(grammarAccess.getCellStateSpecReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVarRefValue
entryRuleVarRefValue 
:
{ before(grammarAccess.getVarRefValueRule()); }
	 ruleVarRefValue
{ after(grammarAccess.getVarRefValueRule()); } 
	 EOF 
;

// Rule VarRefValue
ruleVarRefValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVarRefValueAccess().getRefAssignment()); }
(rule__VarRefValue__RefAssignment)
{ after(grammarAccess.getVarRefValueAccess().getRefAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCellState
entryRuleCellState 
:
{ before(grammarAccess.getCellStateRule()); }
	 ruleCellState
{ after(grammarAccess.getCellStateRule()); } 
	 EOF 
;

// Rule CellState
ruleCellState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCellStateAccess().getGroup()); }
(rule__CellState__Group__0)
{ after(grammarAccess.getCellStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitionSpec
entryRuleTransitionSpec 
:
{ before(grammarAccess.getTransitionSpecRule()); }
	 ruleTransitionSpec
{ after(grammarAccess.getTransitionSpecRule()); } 
	 EOF 
;

// Rule TransitionSpec
ruleTransitionSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionSpecAccess().getGroup()); }
(rule__TransitionSpec__Group__0)
{ after(grammarAccess.getTransitionSpecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitionTriggerSpec
entryRuleTransitionTriggerSpec 
:
{ before(grammarAccess.getTransitionTriggerSpecRule()); }
	 ruleTransitionTriggerSpec
{ after(grammarAccess.getTransitionTriggerSpecRule()); } 
	 EOF 
;

// Rule TransitionTriggerSpec
ruleTransitionTriggerSpec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionTriggerSpecAccess().getAlternatives()); }
(rule__TransitionTriggerSpec__Alternatives)
{ after(grammarAccess.getTransitionTriggerSpecAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldSpecification
entryRuleFieldSpecification 
:
{ before(grammarAccess.getFieldSpecificationRule()); }
	 ruleFieldSpecification
{ after(grammarAccess.getFieldSpecificationRule()); } 
	 EOF 
;

// Rule FieldSpecification
ruleFieldSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldSpecificationAccess().getGroup()); }
(rule__FieldSpecification__Group__0)
{ after(grammarAccess.getFieldSpecificationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOptionSpecification
entryRuleOptionSpecification 
:
{ before(grammarAccess.getOptionSpecificationRule()); }
	 ruleOptionSpecification
{ after(grammarAccess.getOptionSpecificationRule()); } 
	 EOF 
;

// Rule OptionSpecification
ruleOptionSpecification
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOptionSpecificationAccess().getAlternatives()); }
(rule__OptionSpecification__Alternatives)
{ after(grammarAccess.getOptionSpecificationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAllowRestartMenu
entryRuleAllowRestartMenu 
:
{ before(grammarAccess.getAllowRestartMenuRule()); }
	 ruleAllowRestartMenu
{ after(grammarAccess.getAllowRestartMenuRule()); } 
	 EOF 
;

// Rule AllowRestartMenu
ruleAllowRestartMenu
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAllowRestartMenuAccess().getGroup()); }
(rule__AllowRestartMenu__Group__0)
{ after(grammarAccess.getAllowRestartMenuAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStartFieldDeclaration
entryRuleStartFieldDeclaration 
:
{ before(grammarAccess.getStartFieldDeclarationRule()); }
	 ruleStartFieldDeclaration
{ after(grammarAccess.getStartFieldDeclarationRule()); } 
	 EOF 
;

// Rule StartFieldDeclaration
ruleStartFieldDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStartFieldDeclarationAccess().getGroup()); }
(rule__StartFieldDeclaration__Group__0)
{ after(grammarAccess.getStartFieldDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldInitialisations
entryRuleFieldInitialisations 
:
{ before(grammarAccess.getFieldInitialisationsRule()); }
	 ruleFieldInitialisations
{ after(grammarAccess.getFieldInitialisationsRule()); } 
	 EOF 
;

// Rule FieldInitialisations
ruleFieldInitialisations
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getGroup()); }
(rule__FieldInitialisations__Group__0)
{ after(grammarAccess.getFieldInitialisationsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldInitialisation
entryRuleFieldInitialisation 
:
{ before(grammarAccess.getFieldInitialisationRule()); }
	 ruleFieldInitialisation
{ after(grammarAccess.getFieldInitialisationRule()); } 
	 EOF 
;

// Rule FieldInitialisation
ruleFieldInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldInitialisationAccess().getAlternatives()); }
(rule__FieldInitialisation__Alternatives)
{ after(grammarAccess.getFieldInitialisationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDefaultInitialisation
entryRuleDefaultInitialisation 
:
{ before(grammarAccess.getDefaultInitialisationRule()); }
	 ruleDefaultInitialisation
{ after(grammarAccess.getDefaultInitialisationRule()); } 
	 EOF 
;

// Rule DefaultInitialisation
ruleDefaultInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDefaultInitialisationAccess().getGroup()); }
(rule__DefaultInitialisation__Group__0)
{ after(grammarAccess.getDefaultInitialisationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRandomInitialisation
entryRuleRandomInitialisation 
:
{ before(grammarAccess.getRandomInitialisationRule()); }
	 ruleRandomInitialisation
{ after(grammarAccess.getRandomInitialisationRule()); } 
	 EOF 
;

// Rule RandomInitialisation
ruleRandomInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRandomInitialisationAccess().getGroup()); }
(rule__RandomInitialisation__Group__0)
{ after(grammarAccess.getRandomInitialisationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContextInitialisation
entryRuleContextInitialisation 
:
{ before(grammarAccess.getContextInitialisationRule()); }
	 ruleContextInitialisation
{ after(grammarAccess.getContextInitialisationRule()); } 
	 EOF 
;

// Rule ContextInitialisation
ruleContextInitialisation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextInitialisationAccess().getGroup()); }
(rule__ContextInitialisation__Group__0)
{ after(grammarAccess.getContextInitialisationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContextExpression
entryRuleContextExpression 
:
{ before(grammarAccess.getContextExpressionRule()); }
	 ruleContextExpression
{ after(grammarAccess.getContextExpressionRule()); } 
	 EOF 
;

// Rule ContextExpression
ruleContextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContextExpressionAccess().getGroup()); }
(rule__ContextExpression__Group__0)
{ after(grammarAccess.getContextExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFilterExpression
entryRuleFilterExpression 
:
{ before(grammarAccess.getFilterExpressionRule()); }
	 ruleFilterExpression
{ after(grammarAccess.getFilterExpressionRule()); } 
	 EOF 
;

// Rule FilterExpression
ruleFilterExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFilterExpressionAccess().getGroup()); }
(rule__FilterExpression__Group__0)
{ after(grammarAccess.getFilterExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCountExpression
entryRuleCountExpression 
:
{ before(grammarAccess.getCountExpressionRule()); }
	 ruleCountExpression
{ after(grammarAccess.getCountExpressionRule()); } 
	 EOF 
;

// Rule CountExpression
ruleCountExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCountExpressionAccess().getGroup()); }
(rule__CountExpression__Group__0)
{ after(grammarAccess.getCountExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotEmptyExpression
entryRuleNotEmptyExpression 
:
{ before(grammarAccess.getNotEmptyExpressionRule()); }
	 ruleNotEmptyExpression
{ after(grammarAccess.getNotEmptyExpressionRule()); } 
	 EOF 
;

// Rule NotEmptyExpression
ruleNotEmptyExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotEmptyExpressionAccess().getGroup()); }
(rule__NotEmptyExpression__Group__0)
{ after(grammarAccess.getNotEmptyExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__CellMember__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellMemberAccess().getCellDisplaySpecParserRuleCall_0()); }
	ruleCellDisplaySpec
{ after(grammarAccess.getCellMemberAccess().getCellDisplaySpecParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCellMemberAccess().getCellVarSpecParserRuleCall_1()); }
	ruleCellVarSpec
{ after(grammarAccess.getCellMemberAccess().getCellVarSpecParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getCellMemberAccess().getCellStateSpecParserRuleCall_2()); }
	ruleCellStateSpec
{ after(grammarAccess.getCellMemberAccess().getCellStateSpecParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Display_typeAlternatives_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeLabelKeyword_3_0_0()); }

	'label' 

{ after(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeLabelKeyword_3_0_0()); }
)

    |(
{ before(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeButtonKeyword_3_0_1()); }

	'button' 

{ after(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeButtonKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Alternatives_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getGroup_4_0()); }
(rule__CellDisplaySpec__Group_4_0__0)
{ after(grammarAccess.getCellDisplaySpecAccess().getGroup_4_0()); }
)

    |(
{ before(grammarAccess.getCellDisplaySpecAccess().getGroup_4_1()); }
(rule__CellDisplaySpec__Group_4_1__0)
{ after(grammarAccess.getCellDisplaySpecAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellVarSpec__TypeAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellVarSpecAccess().getTypeIntKeyword_1_0_0()); }

	'int' 

{ after(grammarAccess.getCellVarSpecAccess().getTypeIntKeyword_1_0_0()); }
)

    |(
{ before(grammarAccess.getCellVarSpecAccess().getTypeStringKeyword_1_0_1()); }

	'String' 

{ after(grammarAccess.getCellVarSpecAccess().getTypeStringKeyword_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateParamSpec__TypeAlternatives_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateParamSpecAccess().getTypeIntKeyword_0_0_0()); }

	'int' 

{ after(grammarAccess.getStateParamSpecAccess().getTypeIntKeyword_0_0_0()); }
)

    |(
{ before(grammarAccess.getStateParamSpecAccess().getTypeStringKeyword_0_0_1()); }

	'String' 

{ after(grammarAccess.getStateParamSpecAccess().getTypeStringKeyword_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecAccess().getLocalCellStateSpecParserRuleCall_0()); }
	ruleLocalCellStateSpec
{ after(grammarAccess.getCellStateSpecAccess().getLocalCellStateSpecParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getCellStateSpecAccess().getCellStateSpecReferenceParserRuleCall_1()); }
	ruleCellStateSpecReference
{ after(grammarAccess.getCellStateSpecAccess().getCellStateSpecReferenceParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getIntValueParserRuleCall_1()); }
	ruleIntValue
{ after(grammarAccess.getValueAccess().getIntValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getVarRefValueParserRuleCall_2()); }
	ruleVarRefValue
{ after(grammarAccess.getValueAccess().getVarRefValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionTriggerSpec__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTriggerSpecAccess().getMouseLeftKeyword_0()); }

	'mouse-left' 

{ after(grammarAccess.getTransitionTriggerSpecAccess().getMouseLeftKeyword_0()); }
)

    |(
{ before(grammarAccess.getTransitionTriggerSpecAccess().getMouseRightKeyword_1()); }

	'mouse-right' 

{ after(grammarAccess.getTransitionTriggerSpecAccess().getMouseRightKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OptionSpecification__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOptionSpecificationAccess().getStartFieldDeclarationParserRuleCall_0()); }
	ruleStartFieldDeclaration
{ after(grammarAccess.getOptionSpecificationAccess().getStartFieldDeclarationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOptionSpecificationAccess().getAllowRestartMenuParserRuleCall_1()); }
	ruleAllowRestartMenu
{ after(grammarAccess.getOptionSpecificationAccess().getAllowRestartMenuParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationAccess().getDefaultInitialisationParserRuleCall_0()); }
	ruleDefaultInitialisation
{ after(grammarAccess.getFieldInitialisationAccess().getDefaultInitialisationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getFieldInitialisationAccess().getRandomInitialisationParserRuleCall_1()); }
	ruleRandomInitialisation
{ after(grammarAccess.getFieldInitialisationAccess().getRandomInitialisationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getFieldInitialisationAccess().getContextInitialisationParserRuleCall_2()); }
	ruleContextInitialisation
{ after(grammarAccess.getFieldInitialisationAccess().getContextInitialisationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getFilterExpressionParserRuleCall_0()); }
	ruleFilterExpression
{ after(grammarAccess.getAtomicExpressionAccess().getFilterExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getCountExpressionParserRuleCall_1()); }
	ruleCountExpression
{ after(grammarAccess.getAtomicExpressionAccess().getCountExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getNotEmptyExpressionParserRuleCall_2()); }
	ruleNotEmptyExpression
{ after(grammarAccess.getAtomicExpressionAccess().getNotEmptyExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__GridGame__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__0__Impl
	rule__GridGame__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getGameKeyword_0()); }

	'game' 

{ after(grammarAccess.getGridGameAccess().getGameKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__1__Impl
	rule__GridGame__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getNameAssignment_1()); }
(rule__GridGame__NameAssignment_1)
{ after(grammarAccess.getGridGameAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__2__Impl
	rule__GridGame__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getGridGameAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__3__Impl
	rule__GridGame__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getStatesAssignment_3()); }
(rule__GridGame__StatesAssignment_3)?
{ after(grammarAccess.getGridGameAccess().getStatesAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__4__Impl
	rule__GridGame__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGridGameAccess().getCellsAssignment_4()); }
(rule__GridGame__CellsAssignment_4)
{ after(grammarAccess.getGridGameAccess().getCellsAssignment_4()); }
)
(
{ before(grammarAccess.getGridGameAccess().getCellsAssignment_4()); }
(rule__GridGame__CellsAssignment_4)*
{ after(grammarAccess.getGridGameAccess().getCellsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__5__Impl
	rule__GridGame__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGridGameAccess().getFieldsAssignment_5()); }
(rule__GridGame__FieldsAssignment_5)
{ after(grammarAccess.getGridGameAccess().getFieldsAssignment_5()); }
)
(
{ before(grammarAccess.getGridGameAccess().getFieldsAssignment_5()); }
(rule__GridGame__FieldsAssignment_5)*
{ after(grammarAccess.getGridGameAccess().getFieldsAssignment_5()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__6__Impl
	rule__GridGame__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getOptionsAssignment_6()); }
(rule__GridGame__OptionsAssignment_6)*
{ after(grammarAccess.getGridGameAccess().getOptionsAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GridGame__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GridGame__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getRightCurlyBracketKeyword_7()); }

	'}' 

{ after(grammarAccess.getGridGameAccess().getRightCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__CellSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellSpecification__Group__0__Impl
	rule__CellSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getCellKeyword_0()); }

	'cell' 

{ after(grammarAccess.getCellSpecificationAccess().getCellKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellSpecification__Group__1__Impl
	rule__CellSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getNameAssignment_1()); }
(rule__CellSpecification__NameAssignment_1)
{ after(grammarAccess.getCellSpecificationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellSpecification__Group__2__Impl
	rule__CellSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getCellSpecificationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellSpecification__Group__3__Impl
	rule__CellSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getMembersAssignment_3()); }
(rule__CellSpecification__MembersAssignment_3)*
{ after(grammarAccess.getCellSpecificationAccess().getMembersAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellSpecification__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellSpecification__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCellSpecificationAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CellDisplaySpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group__0__Impl
	rule__CellDisplaySpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getDisplayKeyword_0()); }

	'display' 

{ after(grammarAccess.getCellDisplaySpecAccess().getDisplayKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group__1__Impl
	rule__CellDisplaySpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getCellDisplaySpecAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group__2__Impl
	rule__CellDisplaySpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getAsKeyword_2()); }

	'as' 

{ after(grammarAccess.getCellDisplaySpecAccess().getAsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group__3__Impl
	rule__CellDisplaySpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeAssignment_3()); }
(rule__CellDisplaySpec__Display_typeAssignment_3)
{ after(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group__4__Impl
	rule__CellDisplaySpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getAlternatives_4()); }
(rule__CellDisplaySpec__Alternatives_4)
{ after(grammarAccess.getCellDisplaySpecAccess().getAlternatives_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getCellDisplaySpecAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__CellDisplaySpec__Group_4_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group_4_0__0__Impl
	rule__CellDisplaySpec__Group_4_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group_4_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getTextKeyword_4_0_0()); }

	'text' 

{ after(grammarAccess.getCellDisplaySpecAccess().getTextKeyword_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group_4_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group_4_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group_4_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getTextAssignment_4_0_1()); }
(rule__CellDisplaySpec__TextAssignment_4_0_1)
{ after(grammarAccess.getCellDisplaySpecAccess().getTextAssignment_4_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CellDisplaySpec__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group_4_1__0__Impl
	rule__CellDisplaySpec__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getVarKeyword_4_1_0()); }

	'var' 

{ after(grammarAccess.getCellDisplaySpecAccess().getVarKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellDisplaySpec__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellDisplaySpec__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getVarAssignment_4_1_1()); }
(rule__CellDisplaySpec__VarAssignment_4_1_1)
{ after(grammarAccess.getCellDisplaySpecAccess().getVarAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CellVarSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellVarSpec__Group__0__Impl
	rule__CellVarSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellVarSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellVarSpecAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getCellVarSpecAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellVarSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellVarSpec__Group__1__Impl
	rule__CellVarSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellVarSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellVarSpecAccess().getTypeAssignment_1()); }
(rule__CellVarSpec__TypeAssignment_1)
{ after(grammarAccess.getCellVarSpecAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellVarSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellVarSpec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellVarSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellVarSpecAccess().getNameAssignment_2()); }
(rule__CellVarSpec__NameAssignment_2)
{ after(grammarAccess.getCellVarSpecAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__GlobalCellStateSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__0__Impl
	rule__GlobalCellStateSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStatesKeyword_0()); }

	'states' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getStatesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__1__Impl
	rule__GlobalCellStateSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getNameAssignment_1()); }
(rule__GlobalCellStateSpec__NameAssignment_1)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__2__Impl
	rule__GlobalCellStateSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getGroup_2()); }
(rule__GlobalCellStateSpec__Group_2__0)?
{ after(grammarAccess.getGlobalCellStateSpecAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__3__Impl
	rule__GlobalCellStateSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__4__Impl
	rule__GlobalCellStateSpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStatesAssignment_4()); }
(rule__GlobalCellStateSpec__StatesAssignment_4)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getStatesAssignment_4()); }
)
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStatesAssignment_4()); }
(rule__GlobalCellStateSpec__StatesAssignment_4)*
{ after(grammarAccess.getGlobalCellStateSpecAccess().getStatesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__5__Impl
	rule__GlobalCellStateSpec__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStartKeyword_5()); }

	'start' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getStartKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__6__Impl
	rule__GlobalCellStateSpec__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getEqualsSignKeyword_6()); }

	'=' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__7__Impl
	rule__GlobalCellStateSpec__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStartAssignment_7()); }
(rule__GlobalCellStateSpec__StartAssignment_7)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getStartAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__GlobalCellStateSpec__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group_2__0__Impl
	rule__GlobalCellStateSpec__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group_2__1__Impl
	rule__GlobalCellStateSpec__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getParamsAssignment_2_1()); }
(rule__GlobalCellStateSpec__ParamsAssignment_2_1)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group_2__2__Impl
	rule__GlobalCellStateSpec__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getGroup_2_2()); }
(rule__GlobalCellStateSpec__Group_2_2__0)*
{ after(grammarAccess.getGlobalCellStateSpecAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__GlobalCellStateSpec__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group_2_2__0__Impl
	rule__GlobalCellStateSpec__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getGlobalCellStateSpecAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalCellStateSpec__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__GlobalCellStateSpec__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getParamsAssignment_2_2_1()); }
(rule__GlobalCellStateSpec__ParamsAssignment_2_2_1)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateParamSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateParamSpec__Group__0__Impl
	rule__StateParamSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateParamSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateParamSpecAccess().getTypeAssignment_0()); }
(rule__StateParamSpec__TypeAssignment_0)
{ after(grammarAccess.getStateParamSpecAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateParamSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateParamSpec__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateParamSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateParamSpecAccess().getNameAssignment_1()); }
(rule__StateParamSpec__NameAssignment_1)
{ after(grammarAccess.getStateParamSpecAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalCellStateSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__0__Impl
	rule__LocalCellStateSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStatesKeyword_0()); }

	'states' 

{ after(grammarAccess.getLocalCellStateSpecAccess().getStatesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalCellStateSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__1__Impl
	rule__LocalCellStateSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getLocalCellStateSpecAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalCellStateSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__2__Impl
	rule__LocalCellStateSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStatesAssignment_2()); }
(rule__LocalCellStateSpec__StatesAssignment_2)
{ after(grammarAccess.getLocalCellStateSpecAccess().getStatesAssignment_2()); }
)
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStatesAssignment_2()); }
(rule__LocalCellStateSpec__StatesAssignment_2)*
{ after(grammarAccess.getLocalCellStateSpecAccess().getStatesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalCellStateSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__3__Impl
	rule__LocalCellStateSpec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStartKeyword_3()); }

	'start' 

{ after(grammarAccess.getLocalCellStateSpecAccess().getStartKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalCellStateSpec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__4__Impl
	rule__LocalCellStateSpec__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getLocalCellStateSpecAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalCellStateSpec__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__5__Impl
	rule__LocalCellStateSpec__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStartAssignment_5()); }
(rule__LocalCellStateSpec__StartAssignment_5)
{ after(grammarAccess.getLocalCellStateSpecAccess().getStartAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalCellStateSpec__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalCellStateSpec__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getLocalCellStateSpecAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CellStateSpecReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group__0__Impl
	rule__CellStateSpecReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getStatesKeyword_0()); }

	'states' 

{ after(grammarAccess.getCellStateSpecReferenceAccess().getStatesKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellStateSpecReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group__1__Impl
	rule__CellStateSpecReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getStateSpecAssignment_1()); }
(rule__CellStateSpecReference__StateSpecAssignment_1)
{ after(grammarAccess.getCellStateSpecReferenceAccess().getStateSpecAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellStateSpecReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getGroup_2()); }
(rule__CellStateSpecReference__Group_2__0)?
{ after(grammarAccess.getCellStateSpecReferenceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CellStateSpecReference__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group_2__0__Impl
	rule__CellStateSpecReference__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getCellStateSpecReferenceAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellStateSpecReference__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group_2__1__Impl
	rule__CellStateSpecReference__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getParamsAssignment_2_1()); }
(rule__CellStateSpecReference__ParamsAssignment_2_1)
{ after(grammarAccess.getCellStateSpecReferenceAccess().getParamsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellStateSpecReference__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group_2__2__Impl
	rule__CellStateSpecReference__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getGroup_2_2()); }
(rule__CellStateSpecReference__Group_2_2__0)*
{ after(grammarAccess.getCellStateSpecReferenceAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellStateSpecReference__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getRightParenthesisKeyword_2_3()); }

	')' 

{ after(grammarAccess.getCellStateSpecReferenceAccess().getRightParenthesisKeyword_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CellStateSpecReference__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group_2_2__0__Impl
	rule__CellStateSpecReference__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getCellStateSpecReferenceAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellStateSpecReference__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellStateSpecReference__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getParamsAssignment_2_2_1()); }
(rule__CellStateSpecReference__ParamsAssignment_2_2_1)
{ after(grammarAccess.getCellStateSpecReferenceAccess().getParamsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CellState__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group__0__Impl
	rule__CellState__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getNameAssignment_0()); }
(rule__CellState__NameAssignment_0)
{ after(grammarAccess.getCellStateAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group__1__Impl
	rule__CellState__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group__2__Impl
	rule__CellState__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getDisplayAssignment_2()); }
(rule__CellState__DisplayAssignment_2)
{ after(grammarAccess.getCellStateAccess().getDisplayAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group__3__Impl
	rule__CellState__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getGroup_3()); }
(rule__CellState__Group_3__0)?
{ after(grammarAccess.getCellStateAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_4()); }

	'}' 

{ after(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__CellState__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group_3__0__Impl
	rule__CellState__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getTransitionsKeyword_3_0()); }

	'transitions' 

{ after(grammarAccess.getCellStateAccess().getTransitionsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group_3__1__Impl
	rule__CellState__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_3_1()); }

	'{' 

{ after(grammarAccess.getCellStateAccess().getLeftCurlyBracketKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group_3__2__Impl
	rule__CellState__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
(rule__CellState__TransitionsAssignment_3_2)
{ after(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
)
(
{ before(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
(rule__CellState__TransitionsAssignment_3_2)*
{ after(grammarAccess.getCellStateAccess().getTransitionsAssignment_3_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CellState__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CellState__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_3_3()); }

	'}' 

{ after(grammarAccess.getCellStateAccess().getRightCurlyBracketKeyword_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TransitionSpec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSpec__Group__0__Impl
	rule__TransitionSpec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSpec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSpecAccess().getOnKeyword_0()); }

	'on' 

{ after(grammarAccess.getTransitionSpecAccess().getOnKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSpec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSpec__Group__1__Impl
	rule__TransitionSpec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSpec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSpecAccess().getTriggerAssignment_1()); }
(rule__TransitionSpec__TriggerAssignment_1)
{ after(grammarAccess.getTransitionSpecAccess().getTriggerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSpec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSpec__Group__2__Impl
	rule__TransitionSpec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSpec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSpecAccess().getGotoKeyword_2()); }

	'goto' 

{ after(grammarAccess.getTransitionSpecAccess().getGotoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TransitionSpec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TransitionSpec__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSpec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSpecAccess().getTargetAssignment_3()); }
(rule__TransitionSpec__TargetAssignment_3)
{ after(grammarAccess.getTransitionSpecAccess().getTargetAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldSpecification__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__0__Impl
	rule__FieldSpecification__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0()); }

	'field' 

{ after(grammarAccess.getFieldSpecificationAccess().getFieldKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__1__Impl
	rule__FieldSpecification__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getNameAssignment_1()); }
(rule__FieldSpecification__NameAssignment_1)
{ after(grammarAccess.getFieldSpecificationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__2__Impl
	rule__FieldSpecification__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getFieldSpecificationAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__3__Impl
	rule__FieldSpecification__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getWidthKeyword_3()); }

	'width' 

{ after(grammarAccess.getFieldSpecificationAccess().getWidthKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__4__Impl
	rule__FieldSpecification__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_4()); }

	'=' 

{ after(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__5__Impl
	rule__FieldSpecification__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getWidthAssignment_5()); }
(rule__FieldSpecification__WidthAssignment_5)
{ after(grammarAccess.getFieldSpecificationAccess().getWidthAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__6__Impl
	rule__FieldSpecification__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getHeightKeyword_6()); }

	'height' 

{ after(grammarAccess.getFieldSpecificationAccess().getHeightKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__7__Impl
	rule__FieldSpecification__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_7()); }

	'=' 

{ after(grammarAccess.getFieldSpecificationAccess().getEqualsSignKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__8__Impl
	rule__FieldSpecification__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getHeightAssignment_8()); }
(rule__FieldSpecification__HeightAssignment_8)
{ after(grammarAccess.getFieldSpecificationAccess().getHeightAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__9__Impl
	rule__FieldSpecification__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getField_initialisationAssignment_9()); }
(rule__FieldSpecification__Field_initialisationAssignment_9)?
{ after(grammarAccess.getFieldSpecificationAccess().getField_initialisationAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldSpecification__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldSpecification__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_10()); }

	'}' 

{ after(grammarAccess.getFieldSpecificationAccess().getRightCurlyBracketKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__AllowRestartMenu__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllowRestartMenu__Group__0__Impl
	rule__AllowRestartMenu__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowRestartMenu__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllowRestartMenuAccess().getAllow_restartKeyword_0()); }

	'allow_restart' 

{ after(grammarAccess.getAllowRestartMenuAccess().getAllow_restartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AllowRestartMenu__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AllowRestartMenu__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AllowRestartMenu__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAllowRestartMenuAccess().getAllowRestartMenuAction_1()); }
(

)
{ after(grammarAccess.getAllowRestartMenuAccess().getAllowRestartMenuAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StartFieldDeclaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartFieldDeclaration__Group__0__Impl
	rule__StartFieldDeclaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartFieldDeclarationAccess().getStartKeyword_0()); }

	'start' 

{ after(grammarAccess.getStartFieldDeclarationAccess().getStartKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartFieldDeclaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartFieldDeclaration__Group__1__Impl
	rule__StartFieldDeclaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartFieldDeclarationAccess().getEqualsSignKeyword_1()); }

	'=' 

{ after(grammarAccess.getStartFieldDeclarationAccess().getEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StartFieldDeclaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StartFieldDeclaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartFieldDeclarationAccess().getFieldAssignment_2()); }
(rule__StartFieldDeclaration__FieldAssignment_2)
{ after(grammarAccess.getStartFieldDeclarationAccess().getFieldAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FieldInitialisations__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldInitialisations__Group__0__Impl
	rule__FieldInitialisations__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getInitKeyword_0()); }

	'init' 

{ after(grammarAccess.getFieldInitialisationsAccess().getInitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldInitialisations__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldInitialisations__Group__1__Impl
	rule__FieldInitialisations__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getFieldInitialisationsAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldInitialisations__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldInitialisations__Group__2__Impl
	rule__FieldInitialisations__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getFieldInitialisationsAccess().getGroup_2()); }
(rule__FieldInitialisations__Group_2__0)
{ after(grammarAccess.getFieldInitialisationsAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getFieldInitialisationsAccess().getGroup_2()); }
(rule__FieldInitialisations__Group_2__0)*
{ after(grammarAccess.getFieldInitialisationsAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldInitialisations__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldInitialisations__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getFieldInitialisationsAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FieldInitialisations__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldInitialisations__Group_2__0__Impl
	rule__FieldInitialisations__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getInitialisationsAssignment_2_0()); }
(rule__FieldInitialisations__InitialisationsAssignment_2_0)
{ after(grammarAccess.getFieldInitialisationsAccess().getInitialisationsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FieldInitialisations__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FieldInitialisations__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getSemicolonKeyword_2_1()); }

	';' 

{ after(grammarAccess.getFieldInitialisationsAccess().getSemicolonKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DefaultInitialisation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultInitialisation__Group__0__Impl
	rule__DefaultInitialisation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultInitialisation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultInitialisationAccess().getDefaultKeyword_0()); }

	'default' 

{ after(grammarAccess.getDefaultInitialisationAccess().getDefaultKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultInitialisation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultInitialisation__Group__1__Impl
	rule__DefaultInitialisation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultInitialisation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultInitialisationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getDefaultInitialisationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DefaultInitialisation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DefaultInitialisation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultInitialisation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultInitialisationAccess().getCellAssignment_2()); }
(rule__DefaultInitialisation__CellAssignment_2)
{ after(grammarAccess.getDefaultInitialisationAccess().getCellAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RandomInitialisation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomInitialisation__Group__0__Impl
	rule__RandomInitialisation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getRandomKeyword_0()); }

	'random' 

{ after(grammarAccess.getRandomInitialisationAccess().getRandomKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomInitialisation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomInitialisation__Group__1__Impl
	rule__RandomInitialisation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getRandomInitialisationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomInitialisation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomInitialisation__Group__2__Impl
	rule__RandomInitialisation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getCellAssignment_2()); }
(rule__RandomInitialisation__CellAssignment_2)
{ after(grammarAccess.getRandomInitialisationAccess().getCellAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomInitialisation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomInitialisation__Group__3__Impl
	rule__RandomInitialisation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getEqualsSignKeyword_3()); }

	'=' 

{ after(grammarAccess.getRandomInitialisationAccess().getEqualsSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RandomInitialisation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RandomInitialisation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getCountAssignment_4()); }
(rule__RandomInitialisation__CountAssignment_4)
{ after(grammarAccess.getRandomInitialisationAccess().getCountAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ContextInitialisation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__0__Impl
	rule__ContextInitialisation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getContextKeyword_0()); }

	'context' 

{ after(grammarAccess.getContextInitialisationAccess().getContextKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__1__Impl
	rule__ContextInitialisation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getContextInitialisationAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__2__Impl
	rule__ContextInitialisation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getCellAssignment_2()); }
(rule__ContextInitialisation__CellAssignment_2)
{ after(grammarAccess.getContextInitialisationAccess().getCellAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__3__Impl
	rule__ContextInitialisation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getCheckKeyword_3()); }

	'check' 

{ after(grammarAccess.getContextInitialisationAccess().getCheckKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__4__Impl
	rule__ContextInitialisation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getCheckAssignment_4()); }
(rule__ContextInitialisation__CheckAssignment_4)
{ after(grammarAccess.getContextInitialisationAccess().getCheckAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__5__Impl
	rule__ContextInitialisation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getValueKeyword_5()); }

	'value' 

{ after(grammarAccess.getContextInitialisationAccess().getValueKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__6__Impl
	rule__ContextInitialisation__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getEqualsSignKeyword_6()); }

	'=' 

{ after(grammarAccess.getContextInitialisationAccess().getEqualsSignKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextInitialisation__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextInitialisation__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getExpAssignment_7()); }
(rule__ContextInitialisation__ExpAssignment_7)
{ after(grammarAccess.getContextInitialisationAccess().getExpAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ContextExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextExpression__Group__0__Impl
	rule__ContextExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextExpressionAccess().getSub_expAssignment_0()); }
(rule__ContextExpression__Sub_expAssignment_0)
{ after(grammarAccess.getContextExpressionAccess().getSub_expAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextExpressionAccess().getGroup_1()); }
(rule__ContextExpression__Group_1__0)*
{ after(grammarAccess.getContextExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ContextExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextExpression__Group_1__0__Impl
	rule__ContextExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextExpressionAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getContextExpressionAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ContextExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ContextExpression__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ContextExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextExpressionAccess().getSub_expAssignment_1_1()); }
(rule__ContextExpression__Sub_expAssignment_1_1)
{ after(grammarAccess.getContextExpressionAccess().getSub_expAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FilterExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterExpression__Group__0__Impl
	rule__FilterExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterExpressionAccess().getFilterKeyword_0()); }

	'filter' 

{ after(grammarAccess.getFilterExpressionAccess().getFilterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterExpression__Group__1__Impl
	rule__FilterExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFilterExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterExpression__Group__2__Impl
	rule__FilterExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterExpressionAccess().getCell_typeAssignment_2()); }
(rule__FilterExpression__Cell_typeAssignment_2)
{ after(grammarAccess.getFilterExpressionAccess().getCell_typeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FilterExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FilterExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterExpressionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFilterExpressionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CountExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountExpression__Group__0__Impl
	rule__CountExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountExpressionAccess().getCountKeyword_0()); }

	'count' 

{ after(grammarAccess.getCountExpressionAccess().getCountKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountExpression__Group__1__Impl
	rule__CountExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getCountExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountExpression__Group__2__Impl
	rule__CountExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getCountExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CountExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CountExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CountExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCountExpressionAccess().getCountExpressionAction_3()); }
(

)
{ after(grammarAccess.getCountExpressionAccess().getCountExpressionAction_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NotEmptyExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotEmptyExpression__Group__0__Impl
	rule__NotEmptyExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEmptyExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotEmptyExpressionAccess().getNotEmptyKeyword_0()); }

	'notEmpty' 

{ after(grammarAccess.getNotEmptyExpressionAccess().getNotEmptyKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotEmptyExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotEmptyExpression__Group__1__Impl
	rule__NotEmptyExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEmptyExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotEmptyExpressionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getNotEmptyExpressionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotEmptyExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotEmptyExpression__Group__2__Impl
	rule__NotEmptyExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEmptyExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotEmptyExpressionAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getNotEmptyExpressionAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotEmptyExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotEmptyExpression__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotEmptyExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotEmptyExpressionAccess().getNotEmptyExpressionAction_3()); }
(

)
{ after(grammarAccess.getNotEmptyExpressionAccess().getNotEmptyExpressionAction_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__GridGame__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGridGameAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__StatesAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getStatesGlobalCellStateSpecParserRuleCall_3_0()); }
	ruleGlobalCellStateSpec{ after(grammarAccess.getGridGameAccess().getStatesGlobalCellStateSpecParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__CellsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getCellsCellSpecificationParserRuleCall_4_0()); }
	ruleCellSpecification{ after(grammarAccess.getGridGameAccess().getCellsCellSpecificationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__FieldsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getFieldsFieldSpecificationParserRuleCall_5_0()); }
	ruleFieldSpecification{ after(grammarAccess.getGridGameAccess().getFieldsFieldSpecificationParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GridGame__OptionsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGridGameAccess().getOptionsOptionSpecificationParserRuleCall_6_0()); }
	ruleOptionSpecification{ after(grammarAccess.getGridGameAccess().getOptionsOptionSpecificationParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getCellSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellSpecification__MembersAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellSpecificationAccess().getMembersCellMemberParserRuleCall_3_0()); }
	ruleCellMember{ after(grammarAccess.getCellSpecificationAccess().getMembersCellMemberParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__Display_typeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeAlternatives_3_0()); }
(rule__CellDisplaySpec__Display_typeAlternatives_3_0)
{ after(grammarAccess.getCellDisplaySpecAccess().getDisplay_typeAlternatives_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__TextAssignment_4_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getTextSTRINGTerminalRuleCall_4_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getCellDisplaySpecAccess().getTextSTRINGTerminalRuleCall_4_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellDisplaySpec__VarAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellDisplaySpecAccess().getVarVarSpecCrossReference_4_1_1_0()); }
(
{ before(grammarAccess.getCellDisplaySpecAccess().getVarVarSpecIDTerminalRuleCall_4_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCellDisplaySpecAccess().getVarVarSpecIDTerminalRuleCall_4_1_1_0_1()); }
)
{ after(grammarAccess.getCellDisplaySpecAccess().getVarVarSpecCrossReference_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellVarSpec__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellVarSpecAccess().getTypeAlternatives_1_0()); }
(rule__CellVarSpec__TypeAlternatives_1_0)
{ after(grammarAccess.getCellVarSpecAccess().getTypeAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellVarSpec__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellVarSpecAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getCellVarSpecAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getGlobalCellStateSpecAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getParamsStateParamSpecParserRuleCall_2_1_0()); }
	ruleStateParamSpec{ after(grammarAccess.getGlobalCellStateSpecAccess().getParamsStateParamSpecParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getParamsStateParamSpecParserRuleCall_2_2_1_0()); }
	ruleStateParamSpec{ after(grammarAccess.getGlobalCellStateSpecAccess().getParamsStateParamSpecParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__StatesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStatesCellStateParserRuleCall_4_0()); }
	ruleCellState{ after(grammarAccess.getGlobalCellStateSpecAccess().getStatesCellStateParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalCellStateSpec__StartAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStartCellStateCrossReference_7_0()); }
(
{ before(grammarAccess.getGlobalCellStateSpecAccess().getStartCellStateIDTerminalRuleCall_7_0_1()); }
	RULE_ID{ after(grammarAccess.getGlobalCellStateSpecAccess().getStartCellStateIDTerminalRuleCall_7_0_1()); }
)
{ after(grammarAccess.getGlobalCellStateSpecAccess().getStartCellStateCrossReference_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateParamSpec__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateParamSpecAccess().getTypeAlternatives_0_0()); }
(rule__StateParamSpec__TypeAlternatives_0_0)
{ after(grammarAccess.getStateParamSpecAccess().getTypeAlternatives_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateParamSpec__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateParamSpecAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getStateParamSpecAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__StatesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStatesCellStateParserRuleCall_2_0()); }
	ruleCellState{ after(grammarAccess.getLocalCellStateSpecAccess().getStatesCellStateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalCellStateSpec__StartAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStartCellStateCrossReference_5_0()); }
(
{ before(grammarAccess.getLocalCellStateSpecAccess().getStartCellStateIDTerminalRuleCall_5_0_1()); }
	RULE_ID{ after(grammarAccess.getLocalCellStateSpecAccess().getStartCellStateIDTerminalRuleCall_5_0_1()); }
)
{ after(grammarAccess.getLocalCellStateSpecAccess().getStartCellStateCrossReference_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__StateSpecAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getStateSpecGlobalCellStateSpecCrossReference_1_0()); }
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getStateSpecGlobalCellStateSpecIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getCellStateSpecReferenceAccess().getStateSpecGlobalCellStateSpecIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getCellStateSpecReferenceAccess().getStateSpecGlobalCellStateSpecCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__ParamsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getParamsValueParserRuleCall_2_1_0()); }
	ruleValue{ after(grammarAccess.getCellStateSpecReferenceAccess().getParamsValueParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellStateSpecReference__ParamsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateSpecReferenceAccess().getParamsValueParserRuleCall_2_2_1_0()); }
	ruleValue{ after(grammarAccess.getCellStateSpecReferenceAccess().getParamsValueParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VarRefValue__RefAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVarRefValueAccess().getRefCellVarSpecCrossReference_0()); }
(
{ before(grammarAccess.getVarRefValueAccess().getRefCellVarSpecIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getVarRefValueAccess().getRefCellVarSpecIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getVarRefValueAccess().getRefCellVarSpecCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getCellStateAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__DisplayAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getDisplayCellDisplaySpecParserRuleCall_2_0()); }
	ruleCellDisplaySpec{ after(grammarAccess.getCellStateAccess().getDisplayCellDisplaySpecParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CellState__TransitionsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCellStateAccess().getTransitionsTransitionSpecParserRuleCall_3_2_0()); }
	ruleTransitionSpec{ after(grammarAccess.getCellStateAccess().getTransitionsTransitionSpecParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSpec__TriggerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSpecAccess().getTriggerTransitionTriggerSpecParserRuleCall_1_0()); }
	ruleTransitionTriggerSpec{ after(grammarAccess.getTransitionSpecAccess().getTriggerTransitionTriggerSpecParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionSpec__TargetAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionSpecAccess().getTargetCellStateCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionSpecAccess().getTargetCellStateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionSpecAccess().getTargetCellStateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionSpecAccess().getTargetCellStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getFieldSpecificationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__WidthAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getWidthINTTerminalRuleCall_5_0()); }
	RULE_INT{ after(grammarAccess.getFieldSpecificationAccess().getWidthINTTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__HeightAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getHeightINTTerminalRuleCall_8_0()); }
	RULE_INT{ after(grammarAccess.getFieldSpecificationAccess().getHeightINTTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldSpecification__Field_initialisationAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldSpecificationAccess().getField_initialisationFieldInitialisationsParserRuleCall_9_0()); }
	ruleFieldInitialisations{ after(grammarAccess.getFieldSpecificationAccess().getField_initialisationFieldInitialisationsParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StartFieldDeclaration__FieldAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationCrossReference_2_0()); }
(
{ before(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStartFieldDeclarationAccess().getFieldFieldSpecificationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldInitialisations__InitialisationsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldInitialisationsAccess().getInitialisationsFieldInitialisationParserRuleCall_2_0_0()); }
	ruleFieldInitialisation{ after(grammarAccess.getFieldInitialisationsAccess().getInitialisationsFieldInitialisationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DefaultInitialisation__CellAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDefaultInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); }
(
{ before(grammarAccess.getDefaultInitialisationAccess().getCellCellSpecificationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getDefaultInitialisationAccess().getCellCellSpecificationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getDefaultInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__CellAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); }
(
{ before(grammarAccess.getRandomInitialisationAccess().getCellCellSpecificationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRandomInitialisationAccess().getCellCellSpecificationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRandomInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RandomInitialisation__CountAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRandomInitialisationAccess().getCountINTTerminalRuleCall_4_0()); }
	RULE_INT{ after(grammarAccess.getRandomInitialisationAccess().getCountINTTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__CellAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); }
(
{ before(grammarAccess.getContextInitialisationAccess().getCellCellSpecificationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getContextInitialisationAccess().getCellCellSpecificationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getContextInitialisationAccess().getCellCellSpecificationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__CheckAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getCheckContextExpressionParserRuleCall_4_0()); }
	ruleContextExpression{ after(grammarAccess.getContextInitialisationAccess().getCheckContextExpressionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextInitialisation__ExpAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextInitialisationAccess().getExpContextExpressionParserRuleCall_7_0()); }
	ruleContextExpression{ after(grammarAccess.getContextInitialisationAccess().getExpContextExpressionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextExpression__Sub_expAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextExpressionAccess().getSub_expAtomicExpressionParserRuleCall_0_0()); }
	ruleAtomicExpression{ after(grammarAccess.getContextExpressionAccess().getSub_expAtomicExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ContextExpression__Sub_expAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContextExpressionAccess().getSub_expAtomicExpressionParserRuleCall_1_1_0()); }
	ruleAtomicExpression{ after(grammarAccess.getContextExpressionAccess().getSub_expAtomicExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExpression__Cell_typeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFilterExpressionAccess().getCell_typeCellSpecificationCrossReference_2_0()); }
(
{ before(grammarAccess.getFilterExpressionAccess().getCell_typeCellSpecificationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFilterExpressionAccess().getCell_typeCellSpecificationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFilterExpressionAccess().getCell_typeCellSpecificationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


